{"version":3,"file":"moveable-helper.js","sources":["../src/MoveableHelper.ts"],"sourcesContent":["import { Frame } from \"scenejs\";\nimport {\n    OnDragStart, OnDrag, OnRender, OnResize, OnResizeStart,\n    OnScaleStart, OnScale, OnRotate, OnRotateStart,\n    OnDragGroupStart, OnDragGroup, OnResizeGroupStart,\n    OnResizeGroup, OnScaleGroupStart, OnScaleGroup,\n    OnRotateGroupStart, OnRotateGroup, OnWarp, OnWarpStart,\n    OnClip, OnDragOriginStart, OnDragOrigin, OnRound\n} from \"react-moveable/declaration/types\";\nimport { MoveableHelperOptions } from \"./types\";\nimport { isString } from \"@daybrush/utils\";\n\n\nexport default class MoveableHelper {\n    public static create(options: Partial<MoveableHelperOptions> ) {\n        return new MoveableHelper(options);\n    }\n    public options: Partial<MoveableHelperOptions>;\n    constructor(options: Partial<MoveableHelperOptions> = {}) {\n        this.options = {\n            useRender: false,\n            createAuto: true,\n            ...options,\n        };\n    }\n    public map = new Map<HTMLElement | SVGElement, Frame>();\n    public render(target: HTMLElement | SVGElement, frame: Frame = this.getFrame(target)) {\n        target.style.cssText += frame.toCSS();\n    }\n    public clear() {\n        this.map.clear();\n    }\n    public getTargets() {\n        return this.map.keys();\n    }\n    public getFrames() {\n        return this.map.values();\n    }\n    public getFrame(el: HTMLElement | SVGElement) {\n        return this.map.get(el);\n    }\n    public setFrame(el: HTMLElement | SVGElement, frame: Frame) {\n        return this.map.set(el, frame);\n    }\n    public removeFrame(el: HTMLElement | SVGElement) {\n        this.map.delete(el);\n    }\n\n    public createFrame(el: HTMLElement | SVGElement, properites = {}) {\n        const frame = new Frame({\n            transform: {\n                translate: \"0px, 0px\",\n                rotate: \"0deg\",\n                scale: \"1, 1\",\n            },\n        })\n\n        frame.set(properites);\n\n        this.map.set(el, frame);\n        return frame;\n    }\n    public setElements(selector: { [key: number]: HTMLElement | SVGElement, length: number } | string) {\n        const elements = isString(selector) ? document.querySelectorAll<HTMLElement | SVGElement>(selector) : selector;\n        const length = elements.length;\n        const map = this.map;\n\n        for (let i = 0; i < length; ++i) {\n            const el = elements[i];\n            if (map.has(el)) {\n                continue;\n            }\n            this.createFrame(el);\n        }\n    }\n    public onDragStart = (e: OnDragStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        e.set(this.getTranslate(frame));\n    }\n    public onDrag = (e: OnDrag) => {\n        this.testDrag(e);\n        this.testRender(e.target);\n    }\n    public onDragGroupStart = (e: OnDragGroupStart) => {\n        e.events.forEach(ev => {\n            this.onDragStart(ev);\n        });\n    }\n    public onDragGroup = (e: OnDragGroup) => {\n        e.events.forEach(ev => {\n            this.onDrag(ev);\n        });\n    }\n    public onResizeStart = (e: OnResizeStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n        e.setOrigin([\"%\", \"%\"]);\n    }\n    public onResize = (e: OnResize) => {\n        this.testResize(e);\n        this.testRender(e.target);\n    }\n    public onResizeGroupStart = (e: OnResizeGroupStart) => {\n        e.events.forEach(ev => {\n            this.onResizeStart(ev);\n        });\n    }\n    public onResizeGroup = (e: OnResizeGroup) => {\n        console.log(e.offsetWidth / e.offsetHeight);\n        e.events.forEach(ev => {\n            this.onResize(ev);\n        });\n    }\n    public onScaleStart = (e: OnScaleStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const scale = frame.get(\"transform\", \"scale\").split(\",\").map(value => parseFloat(value));\n\n        e.set(scale);\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onScale = (e: OnScale) => {\n        this.testScale(e);\n        this.testRender(e.target);\n    }\n    public onScaleGroupStart = (e: OnScaleGroupStart) => {\n        e.events.forEach(ev => {\n            this.onScaleStart(ev);\n        });\n    }\n    public onScaleGroup = (e: OnScaleGroup) => {\n        e.events.forEach(ev => {\n            this.onScale(ev);\n        });\n    }\n    public onRotateStart = (e: OnRotateStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const rotate = parseFloat(frame.get(\"transform\", \"rotate\")) || 0;\n\n        e.set(rotate);\n        (e as any).dragStart && this.onDragStart((e as any).dragStart);\n    }\n    public onRotate = (e: OnRotate) => {\n        this.testRotate(e);\n        this.testRender(e.target);\n    }\n    public onRotateGroupStart = (e: OnRotateGroupStart) => {\n        e.events.forEach(ev => {\n            this.onRotateStart(ev);\n        });\n    }\n    public onRotateGroup = (e: OnRotateGroup) => {\n        e.events.forEach(ev => {\n            this.onRotate(ev);\n        });\n    }\n    public onClip = (e: OnClip) => {\n        const frame = this.testFrame(e);\n        if (e.clipType === \"rect\") {\n            frame.set(\"clip\", e.clipStyle);\n        } else {\n            frame.set(\"clip-path\", e.clipStyle);\n        }\n        this.testRender(e.target);\n    }\n    public onDragOriginStart = (e: OnDragOriginStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onDragOrigin = (e: OnDragOrigin) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform-origin\", e.transformOrigin);\n        this.testDrag(e.drag);\n        this.testRender(e.target);\n    }\n    public onRound = (e: OnRound) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"border-radius\", e.borderRadius);\n        this.testRender(e.target);\n    }\n    public onWarpStart = (e: OnWarpStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const matrix3d = frame.get(\"transform\", \"matrix3d\");\n\n        if (matrix3d) {\n            e.set(matrix3d.split(\",\").map(v => parseFloat(v)))\n        }\n    }\n    public onWarp = (e: OnWarp) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform\", \"matrix3d\", e.matrix.join(\", \"));\n        this.testRender(e.target);\n    }\n    public onRender = (e: OnRender) => {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        if (!target || !frame) {\n            return;\n        }\n        this.render(target, frame);\n    }\n    private testFrame(e: any) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n\n        if (frame) {\n            return frame;\n        }\n        if (!this.options.createAuto) {\n            if (e.stop) {\n                e.stop();\n                return;\n            }\n        }\n        return this.createFrame(target);\n    }\n    private getTranslate(frame: Frame) {\n        return this.testTranslate(frame).map(value => parseFloat(value) || 0);\n    }\n    private testTranslate(frame: Frame) {\n        const translate = frame.get(\"transform\", \"translate\");\n\n        if (translate) {\n            return translate.split(\",\");\n        }\n        const translateX = frame.get(\"transform\", \"translateX\");\n\n        if (translateX) {\n            const translateY = frame.get(\"transform\", \"translateY\");\n\n            return [translateX, translateY];\n        }\n\n        frame.set(\"transform\", \"translate\", \"0px,0px\");\n        return [\"0px\", \"0px\"];\n    }\n    private testDrag(e: OnDrag) {\n        const target = e.target;\n        const beforeTranslate = e.beforeTranslate;\n\n        const frame = this.getFrame(target);\n        const tx = `${beforeTranslate[0]}px`;\n        const ty = `${beforeTranslate[1]}px`;\n\n        if (frame.has(\"transform\", \"translate\")) {\n            frame.set(\"transform\", \"translate\", `${tx},${ty}`);\n        } else {\n            frame.set(\"transform\", \"translateX\", tx);\n            frame.set(\"transform\", \"translateY\", ty);\n        }\n    }\n    private testResize(e: OnResize) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        frame.set(\"width\", `${e.width}px`);\n        frame.set(\"height\", `${e.height}px`);\n\n        this.testDrag(e.drag);\n    }\n    private testScale(e: OnScale) {\n        const frame = this.testFrame(e);\n        const scale = e.scale;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"scale\", `${scale[0]},${scale[1]}`);\n    }\n    private testRotate(e: OnRotate) {\n        const frame = this.testFrame(e);\n        const rotate = e.beforeRotate;\n\n        (e as any).drag && this.testDrag((e as any).drag);\n        frame.set(\"transform\", \"rotate\", `${rotate}deg`);\n    }\n    private testRender(target, frame = this.getFrame(target)) {\n        if (!this.options.useRender) {\n            this.render(target, frame);\n        }\n    }\n}\n"],"names":["options","Map","e","frame","_this","testFrame","set","getTranslate","testDrag","testRender","target","events","forEach","ev","onDragStart","onDrag","dragStart","setOrigin","testResize","onResizeStart","console","log","offsetWidth","offsetHeight","onResize","scale","get","split","map","value","parseFloat","testScale","onScaleStart","onScale","rotate","testRotate","onRotateStart","onRotate","clipType","clipStyle","transformOrigin","drag","borderRadius","matrix3d","v","matrix","join","getFrame","render","useRender","createAuto","MoveableHelper","style","cssText","toCSS","clear","keys","values","el","delete","properites","Frame","transform","translate","selector","elements","isString","document","querySelectorAll","length","i","has","createFrame","stop","testTranslate","translateX","translateY","beforeTranslate","tx","ty","width","height","beforeRotate"],"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"}