{"version":3,"file":"moveable-helper.min.js","sources":["../src/MoveableHelper.ts"],"sourcesContent":["import { Frame } from \"scenejs\";\nimport {\n    OnDragStart, OnDrag, OnRender, OnResize, OnResizeStart,\n    OnScaleStart, OnScale, OnRotate, OnRotateStart,\n    OnDragGroupStart, OnDragGroup, OnResizeGroupStart,\n    OnResizeGroup, OnScaleGroupStart, OnScaleGroup, OnRotateGroupStart, OnRotateGroup, OnWarp, OnWarpStart\n} from \"react-moveable\";\nimport { MoveableHelperOptions } from \"./types\";\nimport { isString } from \"@daybrush/utils\";\n\n\nexport default class MoveableHelper {\n    public static create(options: Partial<MoveableHelperOptions> ) {\n        return new MoveableHelper(options);\n    }\n    public options: Partial<MoveableHelperOptions>;\n    constructor(options: Partial<MoveableHelperOptions> = {}) {\n        this.options = {\n            useRender: false,\n            createAuto: true,\n            ...options,\n        };\n    }\n    public map = new Map<HTMLElement | SVGElement, Frame>();\n    public getFrame(el: HTMLElement | SVGElement) {\n        return this.map.get(el);\n    }\n    public createFrame(el: HTMLElement | SVGElement, properites = {}) {\n        const frame = new Frame({\n            transform: {\n                translate: \"0px, 0px\",\n                rotate: \"0deg\",\n                scale: \"1, 1\",\n                matrix3d: \"1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1\",\n            },\n        })\n\n        frame.set(properites);\n\n        this.map.set(el, frame);\n        return frame;\n    }\n    public setElements(selector: { [key: number]: HTMLElement | SVGElement, length: number } | string) {\n        const elements = isString(selector) ? document.querySelectorAll<HTMLElement | SVGElement>(selector) : selector;\n        const length = elements.length;\n        const map = this.map;\n\n        for (let i = 0; i < length; ++i) {\n            const el = elements[i];\n            if (map.has(el)) {\n                continue;\n            }\n            this.createFrame(el);\n        }\n    }\n    public onDragStart = (e: OnDragStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        e.set(this.getTranslate(frame));\n    }\n    public onDrag = (e: OnDrag) => {\n        this.testDrag(e);\n        this.testRender(e.target);\n    }\n    public onDragGroupStart = (e: OnDragGroupStart) => {\n        e.events.forEach(ev => {\n            this.onDragStart(ev);\n        });\n    }\n    public onDragGroup = (e: OnDragGroup) => {\n        e.events.forEach(ev => {\n            this.onDrag(ev);\n        });\n    }\n    public onResizeStart = (e: OnResizeStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n        e.setOrigin([\"%\", \"%\"]);\n    }\n    public onResize = (e: OnResize) => {\n        this.testResize(e);\n        this.testRender(e.target);\n    }\n    public onResizeGroupStart = (e: OnResizeGroupStart) => {\n        e.events.forEach(ev => {\n            this.onResizeStart(ev);\n        });\n    }\n    public onResizeGroup = (e: OnResizeGroup) => {\n        console.log(e.offsetWidth / e.offsetHeight);\n        e.events.forEach(ev => {\n            this.onResize(ev);\n        });\n    }\n    public onScaleStart = (e: OnScaleStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const scale = frame.get(\"transform\", \"scale\").split(\",\").map(value => parseFloat(value));\n\n        e.set(scale);\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onScale = (e: OnScale) => {\n        this.testScale(e);\n        this.testRender(e.target);\n    }\n    public onScaleGroupStart = (e: OnScaleGroupStart) => {\n        e.events.forEach(ev => {\n            this.onScaleStart(ev);\n        });\n    }\n    public onScaleGroup = (e: OnScaleGroup) => {\n        e.events.forEach(ev => {\n            this.onScale(ev);\n        });\n    }\n    public onRotateStart = (e: OnRotateStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const rotate = parseFloat(frame.get(\"transform\", \"rotate\")) || 0;\n\n        e.set(rotate);\n        (e as any).dragStart && this.onDragStart((e as any).dragStart);\n    }\n    public onRotate = (e: OnRotate) => {\n        this.testRotate(e);\n        this.testRender(e.target);\n    }\n    public onRotateGroupStart = (e: OnRotateGroupStart) => {\n        e.events.forEach(ev => {\n            this.onRotateStart(ev);\n        });\n    }\n    public onRotateGroup = (e: OnRotateGroup) => {\n        e.events.forEach(ev => {\n            this.onRotate(ev);\n        });\n    }\n    public onClip = (e: any) => {\n        const frame = this.testFrame(e);\n        if (e.clipType === \"rect\") {\n            frame.set(\"clip\", e.clipStyle);\n        } else {\n            frame.set(\"clip-path\", e.clipStyle);\n        }\n        this.testRender(e.target);\n    }\n    public onWarpStart = (e: OnWarpStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        e.set(frame.get(\"transform\", \"matrix3d\").split(\",\").map(v => parseFloat(v)));\n    }\n    public onWarp = (e: OnWarp) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform\", \"matrix3d\", e.matrix.join(\", \"));\n        this.testRender(e.target);\n    }\n    public onRender = (e: OnRender) => {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        if (!target || !frame) {\n            return;\n        }\n        this.render(target, frame);\n    }\n    private testFrame(e: any) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n\n        if (frame) {\n            return frame;\n        }\n        if (!this.options.createAuto) {\n            if (e.stop) {\n                e.stop();\n                return;\n            }\n        }\n        return this.createFrame(target);\n    }\n    private getTranslate(frame: Frame) {\n        return this.testTranslate(frame).map(value => parseFloat(value) || 0);\n    }\n    private testTranslate(frame: Frame) {\n        const translate = frame.get(\"transform\", \"translate\");\n\n        if (translate) {\n            return translate.split(\",\");\n        }\n        const translateX = frame.get(\"transform\", \"translateX\");\n\n        if (translateX) {\n            const translateY = frame.get(\"transform\", \"translateY\");\n\n            return [translateX, translateY];\n        }\n\n        frame.set(\"transform\", \"translate\", \"0px,0px\");\n        return [\"0px\", \"0px\"];\n    }\n    private testDrag(e: OnDrag) {\n        const target = e.target;\n        const beforeTranslate = e.beforeTranslate;\n\n        const frame = this.getFrame(target);\n        const tx = `${beforeTranslate[0]}px`;\n        const ty = `${beforeTranslate[1]}px`;\n\n        if (frame.has(\"transform\", \"translate\")) {\n            frame.set(\"transform\", \"translate\", `${tx},${ty}`);\n        } else {\n            frame.set(\"transform\", \"translateX\", tx);\n            frame.set(\"transform\", \"translateY\", ty);\n        }\n    }\n    private testResize(e: OnResize) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        frame.set(\"width\", `${e.width}px`);\n        frame.set(\"height\", `${e.height}px`);\n\n        this.testDrag(e.drag);\n    }\n    private testScale(e: OnScale) {\n        const frame = this.testFrame(e);\n        const scale = e.scale;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"scale\", `${scale[0]},${scale[1]}`);\n    }\n    private testRotate(e: OnRotate) {\n        const frame = this.testFrame(e);\n        const rotate = e.beforeRotate;\n\n        (e as any).drag && this.testDrag((e as any).drag);\n        frame.set(\"transform\", \"rotate\", `${rotate}deg`);\n    }\n    private testRender(target, frame = this.getFrame(target)) {\n        if (!this.options.useRender) {\n            this.render(target, frame);\n        }\n    }\n    private render(target: HTMLElement | SVGElement, frame: Frame = this.getFrame(target)) {\n        target.style.cssText += frame.toCSS();\n    }\n}\n"],"names":["options","Map","e","frame","_this","testFrame","set","getTranslate","testDrag","testRender","target","events","forEach","ev","onDragStart","onDrag","dragStart","setOrigin","testResize","onResizeStart","console","log","offsetWidth","offsetHeight","onResize","scale","get","split","map","value","parseFloat","testScale","onScaleStart","onScale","rotate","testRotate","onRotateStart","onRotate","clipType","clipStyle","v","matrix","join","getFrame","render","useRender","createAuto","MoveableHelper","el","this","properites","Frame","transform","translate","matrix3d","selector","elements","isString","document","querySelectorAll","length","i","has","createFrame","stop","testTranslate","translateX","beforeTranslate","tx","ty","width","height","drag","beforeRotate","style","cssText","toCSS"],"mappings":"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"}