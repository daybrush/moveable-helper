{"version":3,"file":"moveable-helper.min.js","sources":["../src/MoveableHelper.ts"],"sourcesContent":["import { Frame } from \"scenejs\";\nimport {\n    OnDragStart, OnDrag, OnRender, OnResize, OnResizeStart,\n    OnScaleStart, OnScale, OnRotate, OnRotateStart,\n    OnDragGroupStart, OnDragGroup, OnResizeGroupStart,\n    OnResizeGroup, OnScaleGroupStart, OnScaleGroup, OnRotateGroupStart, OnRotateGroup\n} from \"react-moveable\";\n\n\nexport default class MoveableHelper {\n    public static create(options: Partial<MoveableHelperOptions> ) {\n        return new MoveableHelper(options);\n    }\n    public options: Partial<MoveableHelperOptions>;\n    constructor(options: Partial<MoveableHelperOptions> = {}) {\n        this.options = {\n            useRender: false,\n            createAuto: true,\n            ...options,\n        };\n    }\n    public map = new Map<HTMLElement | SVGElement, Frame>();\n    public getFrame(el: HTMLElement | SVGElement) {\n        return this.map.get(el);\n    }\n    public createFrame(el: HTMLElement | SVGElement, properites = {}) {\n        const frame = new Frame({\n            transform: {\n                translate: \"0px, 0px\",\n                rotate: \"0deg\",\n                scale: \"1, 1\",\n            },\n        })\n\n        frame.set(properites);\n\n        this.map.set(el, frame);\n        return frame;\n    }\n    public onDragStart = (e: OnDragStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        e.set(this.getTranslate(frame));\n    }\n    public onDrag = (e: OnDrag) => {\n        this.testDrag(e);\n        this.testRender(e.target);\n    }\n    public onDragGroupStart = (e: OnDragGroupStart) => {\n        e.events.forEach(ev => {\n            this.onDragStart(ev);\n        });\n    }\n    public onDragGroup = (e: OnDragGroup) => {\n        e.events.forEach(ev => {\n            this.onDrag(ev);\n        });\n    }\n    public onResizeStart = (e: OnResizeStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n        e.setOrigin([\"%\", \"%\"]);\n    }\n    public onResize = (e: OnResize) => {\n        this.testResize(e);\n        this.testRender(e.target);\n    }\n    public onResizeGroupStart = (e: OnResizeGroupStart) => {\n        e.events.forEach(ev => {\n            this.onResizeStart(ev);\n        });\n    }\n    public onResizeGroup = (e: OnResizeGroup) => {\n        console.log(e.offsetWidth / e.offsetHeight);\n        e.events.forEach(ev => {\n            this.onResize(ev);\n        });\n    }\n    public onScaleStart = (e: OnScaleStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const scale = frame.get(\"transform\", \"scale\").split(\",\").map(value => parseFloat(value));\n\n        e.set(scale);\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onScale = (e: OnScale) => {\n        this.testScale(e);\n        this.testRender(e.target);\n    }\n    public onScaleGroupStart = (e: OnScaleGroupStart) => {\n        e.events.forEach(ev => {\n            this.onScaleStart(ev);\n        });\n    }\n    public onScaleGroup = (e: OnScaleGroup) => {\n        e.events.forEach(ev => {\n            this.onScale(ev);\n        });\n    }\n    public onRotateStart = (e: OnRotateStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const rotate = parseFloat(frame.get(\"transform\", \"rotate\")) || 0;\n\n        e.set(rotate);\n        (e as any).dragStart && this.onDragStart((e as any).dragStart);\n    }\n    public onRotate = (e: OnRotate) => {\n        this.testRotate(e);\n        this.testRender(e.target);\n    }\n    public onRotateGroupStart = (e: OnRotateGroupStart) => {\n        e.events.forEach(ev => {\n            this.onRotateStart(ev);\n        });\n    }\n    public onRotateGroup = (e: OnRotateGroup) => {\n        e.events.forEach(ev => {\n            this.onRotate(ev);\n        });\n    }\n    public onRender = (e: OnRender) => {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        if (!target || !frame) {\n            return;\n        }\n        this.render(target, frame);\n    }\n    private testFrame(e: any) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n\n        if (frame) {\n            return frame;\n        }\n        if (!this.options.createAuto) {\n            if (e.stop) {\n                e.stop();\n                return;\n            }\n        }\n        return this.createFrame(target);\n    }\n    private getTranslate(frame: Frame) {\n        return this.testTranslate(frame).map(value => parseFloat(value) || 0);\n    }\n    private testTranslate(frame: Frame) {\n        const translate = frame.get(\"transform\", \"translate\");\n\n        if (translate) {\n            return translate.split(\",\");\n        }\n        const translateX = frame.get(\"transform\", \"translateX\");\n\n        if (translateX) {\n            const translateY = frame.get(\"transform\", \"translateY\");\n\n            return [translateX, translateY];\n        }\n\n        frame.set(\"transform\", \"translate\", \"0px,0px\");\n        return [\"0px\", \"0px\"];\n    }\n    private testDrag(e: OnDrag) {\n        const target = e.target;\n        const beforeTranslate = e.beforeTranslate;\n\n        const frame = this.getFrame(target);\n        const tx = `${beforeTranslate[0]}px`;\n        const ty = `${beforeTranslate[1]}px`;\n\n        if (frame.has(\"transform\", \"translate\")) {\n            frame.set(\"transform\", \"translate\", `${tx},${ty}`);\n        } else {\n            frame.set(\"transform\", \"translateX\", tx);\n            frame.set(\"transform\", \"translateY\", ty);\n        }\n    }\n    private testResize(e: OnResize) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        frame.set(\"width\", `${e.width}px`);\n        frame.set(\"height\", `${e.height}px`);\n\n        this.testDrag(e.drag);\n    }\n    private testScale(e: OnScale) {\n        const frame = this.testFrame(e);\n        const scale = e.scale;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"scale\", `${scale[0]},${scale[1]}`);\n    }\n    private testRotate(e: OnRotate) {\n        const frame = this.testFrame(e);\n        const rotate = e.beforeRotate;\n\n        (e as any).drag && this.testDrag((e as any).drag);\n        frame.set(\"transform\", \"rotate\", `${rotate}deg`);\n    }\n    private testRender(target, frame = this.getFrame(target)) {\n        if (!this.options.useRender) {\n            this.render(target, frame);\n        }\n    }\n    private render(target: HTMLElement | SVGElement, frame: Frame = this.getFrame(target)) {\n        target.style.cssText += frame.toCSS();\n    }\n}\n"],"names":["options","Map","e","frame","_this","testFrame","set","getTranslate","testDrag","testRender","target","events","forEach","ev","onDragStart","onDrag","dragStart","setOrigin","testResize","onResizeStart","console","log","offsetWidth","offsetHeight","onResize","scale","get","split","map","value","parseFloat","testScale","onScaleStart","onScale","rotate","testRotate","onRotateStart","onRotate","getFrame","render","useRender","createAuto","MoveableHelper","el","this","properites","Frame","transform","translate","stop","createFrame","testTranslate","translateX","beforeTranslate","tx","ty","has","width","height","drag","beforeRotate","style","cssText","toCSS"],"mappings":"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"}