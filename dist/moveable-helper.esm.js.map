{"version":3,"file":"moveable-helper.esm.js","sources":["../src/MoveableHelper.ts"],"sourcesContent":["import { Frame } from \"scenejs\";\nimport {\n    OnDragStart, OnDrag, OnRender, OnResize, OnResizeStart,\n    OnScaleStart, OnScale, OnRotate, OnRotateStart,\n    OnDragGroupStart, OnDragGroup, OnResizeGroupStart,\n    OnResizeGroup, OnScaleGroupStart, OnScaleGroup,\n    OnRotateGroupStart, OnRotateGroup, OnWarp, OnWarpStart,\n    OnClip, OnDragOriginStart, OnDragOrigin, OnRound\n} from \"react-moveable/declaration/types\";\nimport { MoveableHelperOptions } from \"./types\";\nimport { isString } from \"@daybrush/utils\";\n\n\nexport default class MoveableHelper {\n    public static create(options: Partial<MoveableHelperOptions> ) {\n        return new MoveableHelper(options);\n    }\n    public options: Partial<MoveableHelperOptions>;\n    constructor(options: Partial<MoveableHelperOptions> = {}) {\n        this.options = {\n            useRender: false,\n            createAuto: true,\n            ...options,\n        };\n    }\n    public map = new Map<HTMLElement | SVGElement, Frame>();\n    public render(target: HTMLElement | SVGElement, frame: Frame = this.getFrame(target)) {\n        target.style.cssText += frame.toCSS();\n    }\n    public clear() {\n        this.map.clear();\n    }\n    public getTargets() {\n        return this.map.keys();\n    }\n    public getFrames() {\n        return this.map.values();\n    }\n    public getFrame(el: HTMLElement | SVGElement) {\n        return this.map.get(el);\n    }\n    public setFrame(el: HTMLElement | SVGElement, frame: Frame) {\n        return this.map.set(el, frame);\n    }\n    public removeFrame(el: HTMLElement | SVGElement) {\n        this.map.delete(el);\n    }\n\n    public createFrame(el: HTMLElement | SVGElement, properites = {}) {\n        const frame = new Frame({\n            transform: {\n                translate: \"0px, 0px\",\n                rotate: \"0deg\",\n                scale: \"1, 1\",\n            },\n        })\n\n        frame.set(properites);\n\n        this.map.set(el, frame);\n        return frame;\n    }\n    public setElements(selector: { [key: number]: HTMLElement | SVGElement, length: number } | string) {\n        const elements = isString(selector) ? document.querySelectorAll<HTMLElement | SVGElement>(selector) : selector;\n        const length = elements.length;\n        const map = this.map;\n\n        for (let i = 0; i < length; ++i) {\n            const el = elements[i];\n            if (map.has(el)) {\n                continue;\n            }\n            this.createFrame(el);\n        }\n    }\n    public onDragStart = (e: OnDragStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        e.set(this.getTranslate(frame));\n    }\n    public onDrag = (e: OnDrag) => {\n        this.testDrag(e);\n        this.testRender(e.target);\n    }\n    public onDragGroupStart = (e: OnDragGroupStart) => {\n        e.events.forEach(ev => {\n            this.onDragStart(ev);\n        });\n    }\n    public onDragGroup = (e: OnDragGroup) => {\n        e.events.forEach(ev => {\n            this.onDrag(ev);\n        });\n    }\n    public onResizeStart = (e: OnResizeStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n        e.setOrigin([\"%\", \"%\"]);\n    }\n    public onResize = (e: OnResize) => {\n        this.testResize(e);\n        this.testRender(e.target);\n    }\n    public onResizeGroupStart = (e: OnResizeGroupStart) => {\n        e.events.forEach(ev => {\n            this.onResizeStart(ev);\n        });\n    }\n    public onResizeGroup = (e: OnResizeGroup) => {\n        console.log(e.offsetWidth / e.offsetHeight);\n        e.events.forEach(ev => {\n            this.onResize(ev);\n        });\n    }\n    public onScaleStart = (e: OnScaleStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const scale = frame.get(\"transform\", \"scale\").split(\",\").map(value => parseFloat(value));\n\n        e.set(scale);\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onScale = (e: OnScale) => {\n        this.testScale(e);\n        this.testRender(e.target);\n    }\n    public onScaleGroupStart = (e: OnScaleGroupStart) => {\n        e.events.forEach(ev => {\n            this.onScaleStart(ev);\n        });\n    }\n    public onScaleGroup = (e: OnScaleGroup) => {\n        e.events.forEach(ev => {\n            this.onScale(ev);\n        });\n    }\n    public onRotateStart = (e: OnRotateStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const rotate = parseFloat(frame.get(\"transform\", \"rotate\")) || 0;\n\n        e.set(rotate);\n        (e as any).dragStart && this.onDragStart((e as any).dragStart);\n    }\n    public onRotate = (e: OnRotate) => {\n        this.testRotate(e);\n        this.testRender(e.target);\n    }\n    public onRotateGroupStart = (e: OnRotateGroupStart) => {\n        e.events.forEach(ev => {\n            this.onRotateStart(ev);\n        });\n    }\n    public onRotateGroup = (e: OnRotateGroup) => {\n        e.events.forEach(ev => {\n            this.onRotate(ev);\n        });\n    }\n    public onClip = (e: OnClip) => {\n        const frame = this.testFrame(e);\n        if (e.clipType === \"rect\") {\n            frame.set(\"clip\", e.clipStyle);\n        } else {\n            frame.set(\"clip-path\", e.clipStyle);\n        }\n        this.testRender(e.target);\n    }\n    public onDragOriginStart = (e: OnDragOriginStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onDragOrigin = (e: OnDragOrigin) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform-origin\", e.transformOrigin);\n        this.testDrag(e.drag);\n        this.testRender(e.target);\n    }\n    public onRound = (e: OnRound) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"border-radius\", e.borderRadius);\n        this.testRender(e.target);\n    }\n    public onWarpStart = (e: OnWarpStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        const matrix3d = frame.get(\"transform\", \"matrix3d\");\n\n        if (matrix3d) {\n            e.set(matrix3d.split(\",\").map(v => parseFloat(v)))\n        }\n    }\n    public onWarp = (e: OnWarp) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform\", \"matrix3d\", e.matrix.join(\", \"));\n        this.testRender(e.target);\n    }\n    public onRender = (e: OnRender) => {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        if (!target || !frame) {\n            return;\n        }\n        this.render(target, frame);\n    }\n    private testFrame(e: any) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n\n        if (frame) {\n            return frame;\n        }\n        if (!this.options.createAuto) {\n            if (e.stop) {\n                e.stop();\n                return;\n            }\n        }\n        return this.createFrame(target);\n    }\n    private getTranslate(frame: Frame) {\n        return this.testTranslate(frame).map(value => parseFloat(value) || 0);\n    }\n    private testTranslate(frame: Frame) {\n        const translate = frame.get(\"transform\", \"translate\");\n\n        if (translate) {\n            return translate.split(\",\");\n        }\n        const translateX = frame.get(\"transform\", \"translateX\");\n\n        if (translateX) {\n            const translateY = frame.get(\"transform\", \"translateY\");\n\n            return [translateX, translateY];\n        }\n\n        frame.set(\"transform\", \"translate\", \"0px,0px\");\n        return [\"0px\", \"0px\"];\n    }\n    private testDrag(e: OnDrag) {\n        const target = e.target;\n        const beforeTranslate = e.beforeTranslate;\n\n        const frame = this.getFrame(target);\n        const tx = `${beforeTranslate[0]}px`;\n        const ty = `${beforeTranslate[1]}px`;\n\n        if (frame.has(\"transform\", \"translate\")) {\n            frame.set(\"transform\", \"translate\", `${tx},${ty}`);\n        } else {\n            frame.set(\"transform\", \"translateX\", tx);\n            frame.set(\"transform\", \"translateY\", ty);\n        }\n    }\n    private testResize(e: OnResize) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        frame.set(\"width\", `${e.width}px`);\n        frame.set(\"height\", `${e.height}px`);\n\n        this.testDrag(e.drag);\n    }\n    private testScale(e: OnScale) {\n        const frame = this.testFrame(e);\n        const scale = e.scale;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"scale\", `${scale[0]},${scale[1]}`);\n    }\n    private testRotate(e: OnRotate) {\n        const frame = this.testFrame(e);\n        const rotate = e.beforeRotate;\n\n        (e as any).drag && this.testDrag((e as any).drag);\n        frame.set(\"transform\", \"rotate\", `${rotate}deg`);\n    }\n    private testRender(target, frame = this.getFrame(target)) {\n        if (!this.options.useRender) {\n            this.render(target, frame);\n        }\n    }\n}\n"],"names":["options","Map","e","frame","_this","testFrame","set","getTranslate","testDrag","testRender","target","events","forEach","ev","onDragStart","onDrag","dragStart","setOrigin","testResize","onResizeStart","console","log","offsetWidth","offsetHeight","onResize","scale","get","split","map","value","parseFloat","testScale","onScaleStart","onScale","rotate","testRotate","onRotateStart","onRotate","clipType","clipStyle","transformOrigin","drag","borderRadius","matrix3d","v","matrix","join","getFrame","render","useRender","createAuto","MoveableHelper","style","cssText","toCSS","clear","keys","values","el","delete","properites","Frame","transform","translate","selector","elements","isString","document","querySelectorAll","length","i","has","createFrame","stop","testTranslate","translateX","translateY","beforeTranslate","tx","ty","width","height","beforeRotate"],"mappings":"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"}